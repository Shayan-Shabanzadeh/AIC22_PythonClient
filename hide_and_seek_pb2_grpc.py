# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import hide_and_seek_pb2 as hide__and__seek__pb2


class GameHandlerStub(object):
    """*
    The service of the game

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DeclareReadiness = channel.unary_unary(
                '/ir.sharif.aic.hideandseek.api.grpc.GameHandler/DeclareReadiness',
                request_serializer=hide__and__seek__pb2.DeclareReadinessCommand.SerializeToString,
                response_deserializer=hide__and__seek__pb2.DeclareReadinessReply.FromString,
                )
        self.Watch = channel.unary_stream(
                '/ir.sharif.aic.hideandseek.api.grpc.GameHandler/Watch',
                request_serializer=hide__and__seek__pb2.WatchCommand.SerializeToString,
                response_deserializer=hide__and__seek__pb2.GameView.FromString,
                )
        self.DoAction = channel.unary_unary(
                '/ir.sharif.aic.hideandseek.api.grpc.GameHandler/DoAction',
                request_serializer=hide__and__seek__pb2.DoActionCommand.SerializeToString,
                response_deserializer=hide__and__seek__pb2.DoActionReply.FromString,
                )


class GameHandlerServicer(object):
    """*
    The service of the game

    """

    def DeclareReadiness(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Watch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DoAction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GameHandlerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DeclareReadiness': grpc.unary_unary_rpc_method_handler(
                    servicer.DeclareReadiness,
                    request_deserializer=hide__and__seek__pb2.DeclareReadinessCommand.FromString,
                    response_serializer=hide__and__seek__pb2.DeclareReadinessReply.SerializeToString,
            ),
            'Watch': grpc.unary_stream_rpc_method_handler(
                    servicer.Watch,
                    request_deserializer=hide__and__seek__pb2.WatchCommand.FromString,
                    response_serializer=hide__and__seek__pb2.GameView.SerializeToString,
            ),
            'DoAction': grpc.unary_unary_rpc_method_handler(
                    servicer.DoAction,
                    request_deserializer=hide__and__seek__pb2.DoActionCommand.FromString,
                    response_serializer=hide__and__seek__pb2.DoActionReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ir.sharif.aic.hideandseek.api.grpc.GameHandler', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GameHandler(object):
    """*
    The service of the game

    """

    @staticmethod
    def DeclareReadiness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ir.sharif.aic.hideandseek.api.grpc.GameHandler/DeclareReadiness',
            hide__and__seek__pb2.DeclareReadinessCommand.SerializeToString,
            hide__and__seek__pb2.DeclareReadinessReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Watch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ir.sharif.aic.hideandseek.api.grpc.GameHandler/Watch',
            hide__and__seek__pb2.WatchCommand.SerializeToString,
            hide__and__seek__pb2.GameView.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DoAction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ir.sharif.aic.hideandseek.api.grpc.GameHandler/DoAction',
            hide__and__seek__pb2.DoActionCommand.SerializeToString,
            hide__and__seek__pb2.DoActionReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
